@page "/students"
@using SharedLibrary.Models.Entity
@inject HttpClient HttpClient

<PageTitle>Student Details</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Students Details</MudText>

@if(students.Count <= 0)
{
    <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" />
}
else
{
    
    <MudTable Items="students" HorizontalScrollbar="true" Hover="true" Breakpoint="Breakpoint.Sm">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Class</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Action</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Company">@context.Class</MudTd>
            <MudTd DataLabel="Email" >@context.Email</MudTd>
            <MudTd DataLabel="">
                <MudFab Href="@($"/student/edit/{context.Id}")" Color="Color.Primary" Size="Size.Small" StartIcon="@Icons.Material.Filled.Edit" />
                <MudFab Href="@($"/student/delete/{context.Id}")" Color="Color.Secondary" Size="Size.Small" StartIcon="@Icons.Material.Filled.Delete" />
            </MudTd>
        </RowTemplate>
    </MudTable>
    <br/>
    <MudPaper Class="d-flex flex-row-reverse flex-grow-1 gap-4" Elevation="0">
        <MudFab Href="/student/add" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" />
    </MudPaper>
}
@code {
   
    protected List<Student> students = new();

    protected override async Task OnInitializedAsync()
    {
        students = await HttpClient.GetFromJsonAsync<List<Student>>("api/student/list");
    }
}