@page "/forgot-password"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject ISnackbar snackbar

<EditForm Model="@forgotPassword" OnValidSubmit="HandleForgotPassword">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Email"
                                  @bind-Value="forgotPassword.Email" For="@(() => forgotPassword.Email)" />
                </MudCardContent>
                <MudCardActions>
                    <MudPaper Class="d-flex flex-column flex-grow-1 gap-4" Elevation="0">
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Submit</MudButton>
                    </MudPaper>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>


@code {
    private ForgotPasswordDto forgotPassword { get; set; } = new();

    private async Task HandleForgotPassword()
    {
        var response = await httpClient.PostAsJsonAsync("api/user/forgotpassword", forgotPassword);
        if (!response.IsSuccessStatusCode)
        {
            snackbar.Add("User not found", Severity.Error);
            return;
        }
       forgotPassword = new();
        snackbar.Add("Reset Link with sucess", Severity.Success);
        navigationManager.NavigateTo("/login");
    }

}